version: '3'

services:
  php:
    build: ./php
    container_name: magento246_php
    working_dir: /var/www/html
    restart: always
    env_file:
      - .env
    volumes:
      - ${MAGENTO_ROOT}:/var/www/html
      - ./php/php.ini:/usr/local/etc/php/conf.d/docker-php-custom.ini
      - ./php/install-magento.sh:/usr/local/bin/install-magento
      - ./php/auth.json:/root/.composer/auth.json
    networks:
      - magento246-network

  nginx:
    image: nginx:1.24
    container_name: magento246_nginx
    restart: always
    volumes:
      - ${MAGENTO_ROOT}:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/settings.conf:/etc/nginx/settings.conf
      - ./nginx/magento.conf:/etc/nginx/magento.conf
    ports:
      - "80:80"
    networks:
      - magento246-network

  mysql:
    image: mysql:8.0
    container_name: magento246_mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    # ports:
    #   - "3306:3306"
    volumes:
      - ${DATA_DIR}/mysql:/var/lib/mysql
    networks:
      - magento246-network

  opensearch:
    image: opensearchproject/opensearch:2.5.0
    container_name: magento246_opensearch
    restart: always
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - plugins.security.disabled=true # Removes SSL requirement
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx2g" # Set min and max JVM heap sizes to at least 50% of system RAM
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - ${DATA_DIR}/opensearch:/usr/share/opensearch/data
    # ports:
    #   - 9200:9200 # REST API
    #   - 9600:9600 # Performance Analyzer
    networks:
      - magento246-network

networks:
  magento246-network: